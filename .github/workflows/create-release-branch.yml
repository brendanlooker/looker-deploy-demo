name: Create Release Tag and Branch

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'

      - name: Fetch Tags
        run: git fetch --tags

      - name: Determine Next Release Version
        id: version
        run: |
          LATEST_TAG=$(git tag -l | sort -V | tail -n 1)
          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="1.0.0"
          else
            IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_TAG"
            PATCH_VERSION=$(( VERSION_PARTS[2] + 1 ))
            NEW_TAG="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
          fi
          echo "new_tag=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Check If Tag Exists
        id: tag_check
        run: |
          if git rev-parse "refs/tags/${{ steps.version.outputs.new_tag }}" >/dev/null 2>&1; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create and Push Tag (If Not Exists)
        if: steps.tag_check.outputs.exists == 'false'
        run: |
          git tag -a ${{ steps.version.outputs.new_tag }} -m "Release ${{ steps.version.outputs.new_tag }}"
          git push origin ${{ steps.version.outputs.new_tag }}

      - name: Create and Push Release Branch
        run: |
          git checkout -b "release/${{ steps.version.outputs.new_tag }}"
          git push origin "release/${{ steps.version.outputs.new_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
